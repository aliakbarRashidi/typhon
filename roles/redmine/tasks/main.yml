---
- name: checkout
  subversion:
    repo: https://svn.redmine.org/redmine/branches/2.5-stable
    dest: "{{ redmine.fulldir }}"

- name: set permissions
  file:
    path: "{{ redmine.fulldir }}"
    state: directory
    owner: "{{ redmine.user }}"
    group: "{{ redmine.user }}"
    recurse: true

- name: update database.yml
  template:
    src: database.yml.j2
    dest: "{{ redmine.fulldir }}/config/database.yml"
    owner: "{{ redmine.user }}"
    group: "{{ redmine.user }}"
    mode: "0640"

- name: copy Gemfile.lock
  copy:
    src: Gemfile.lock
    dest: "{{ redmine.fulldir }}"
    owner: "{{ redmine.user }}"
    group: "{{ redmine.user }}"
    mode: "0640"

- name: install bundle
  command: bundle install --deployment --without development test rmagick
  args:
    chdir: "{{ redmine.fulldir }}"
    creates: "{{ redmine.fulldir }}/vendor/bundle"
  sudo: true
  sudo_user: "{{ redmine.user }}"

- name: generate secret token for sessions
  command: bundle exec rake generate_secret_token
  args:
    chdir: "{{ redmine.fulldir }}"
    creates: "{{ redmine.fulldir }}/config/initializers/secret_token.rb"
  sudo: true
  sudo_user: "{{ redmine.user }}"

# rails migrations are (supposed to be) idempotent
- name: migrate database schema
  command: bundle exec rake db:migrate
  environment:
    RAILS_ENV: production
  args:
    chdir: "{{ redmine.fulldir }}"
  sudo: true
  sudo_user: "{{ redmine.user }}"

# can tell if it worked based on the stdout
- name: load default data
  command: bundle exec rake redmine:load_default_data
  environment:
    RAILS_ENV: production
    REDMINE_LANG: en
  args:
    chdir: "{{ redmine.fulldir }}"
  sudo: true
  sudo_user: "{{ redmine.user }}"
  register: redmine_load_defaults
  failed_when: "redmine_load_defaults.stdout != 'Some configuration data is already loaded.' and redmine_load_defaults.stdout != 'Default configuration data loaded.'"
  changed_when: "redmine_load_defaults.stdout != 'Some configuration data is already loaded.'"
